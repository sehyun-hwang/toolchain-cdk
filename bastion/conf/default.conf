init_by_lua_block {
    print("init_by_lua_block")
}

server {
    default_type text/plain;

    set_by_lua_block $hmac_key {
        return os.getenv("HMAC_KEY");
    }

    location = /auth {
        internal;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";

        include auth-proxy-pass.conf;
    }

    location = /spawn {
        # Requires X-Cognito-Identity-Id header
        auth_request /auth;
        auth_request_set $auth_congnito_identity_id $upstream_http_x_cognito_identity_id;

        # Requires $auth_congnito_identity_id variable
        add_header X-Content-Type-Options nosniff;
        content_by_lua_file /lua/spawn.lua;
    }
    location /ttyd/ {
        # Requires user_id and token arg
        set_by_lua_block $user_id {
            return ngx.var.arg_user_id:gsub("-", "_");
        }
        access_by_lua_file /lua/auth.lua;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_pass http://unix:/run/ttyd/$user_id.sock:/;
    }
}
