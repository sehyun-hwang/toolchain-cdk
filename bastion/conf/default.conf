init_by_lua_block {
    print("init_by_lua_block")
}

map $http_origin $allowed_origin {
    include allowed-origin.conf;
}

server {
    default_type text/plain;

    set_by_lua_block $hmac_key {
        return os.getenv("HMAC_KEY");
    }

    location /options_request {
        internal;
        add_header Access-Control-Allow-Headers Authorization always;
        add_header Access-Control-Allow-Origin $allowed_origin always;
        return 204 '';
    }

    location = /auth {
        internal;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";

        # https://stackoverflow.com/a/79078763
        proxy_ssl_server_name on;
        include auth-proxy-pass.conf;
    }

    location = /spawn {
        rewrite_log on;
        if ($request_method = OPTIONS) {
            rewrite ^ /options_request;
        }

        # Requires X-Cognito-Identity-Id header
        auth_request /auth;
        auth_request_set $auth_congnito_identity_id $upstream_http_x_cognito_identity_id;

        # Requires $auth_congnito_identity_id variable
        add_header X-Content-Type-Options nosniff;
        add_header Access-Control-Allow-Headers Authorization always;
        add_header Access-Control-Allow-Origin $allowed_origin always;

        content_by_lua_file /etc/nginx/lua/spawn.lua;
    }
    location /ttyd/ {
        if ($request_method = OPTIONS) {
            rewrite ^ /options_request;
        }

        # Requires user_id and token arg
        set_by_lua_block $user_id {
            return ngx.var.arg_user_id:gsub("-", "_");
        }
        access_by_lua_file /etc/nginx/lua/auth.lua;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_pass http://unix:/run/ttyd/$user_id.sock:/;

        add_header Access-Control-Allow-Origin $allowed_origin always;
    }
}
